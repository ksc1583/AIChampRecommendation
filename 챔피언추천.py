# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '챔피언추천.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from sklearn.model_selection import train_test_split
import keras
from keras.utils import np_utils
from keras.datasets import mnist
from keras.models import Sequential
from keras.layers import Dense, Activation
import numpy as np
import pandas as pd
from numpy import argmax
from keras.models import load_model
from PyQt5 import QtCore, QtGui, QtWidgets
import numpy as np
import json
import random
import os
import matplotlib.pyplot as plt
import copy

os.environ['TF_CPP_MIN_LOG_LEVEL'] = '3'

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setObjectName("groupBox")
        self.comboBox = QtWidgets.QComboBox(self.groupBox)
        self.comboBox.setGeometry(QtCore.QRect(140, 20, 94, 22))
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox_2 = QtWidgets.QComboBox(self.groupBox)
        self.comboBox_2.setGeometry(QtCore.QRect(140, 60, 94, 22))
        self.comboBox_2.setObjectName("comboBox_2")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_3 = QtWidgets.QComboBox(self.groupBox)
        self.comboBox_3.setGeometry(QtCore.QRect(140, 100, 94, 22))
        self.comboBox_3.setObjectName("comboBox_3")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_4 = QtWidgets.QComboBox(self.groupBox)
        self.comboBox_4.setGeometry(QtCore.QRect(140, 140, 94, 22))
        self.comboBox_4.setObjectName("comboBox_4")
        self.comboBox_4.addItem("")
        self.comboBox_4.addItem("")
        self.comboBox_4.addItem("")
        self.comboBox_4.addItem("")
        self.comboBox_4.addItem("")
        self.comboBox_4.addItem("")
        self.comboBox_5 = QtWidgets.QComboBox(self.groupBox)
        self.comboBox_5.setGeometry(QtCore.QRect(140, 190, 94, 22))
        self.comboBox_5.setObjectName("comboBox_5")
        self.comboBox_5.addItem("")
        self.comboBox_5.addItem("")
        self.comboBox_5.addItem("")
        self.comboBox_5.addItem("")
        self.comboBox_5.addItem("")
        self.comboBox_5.addItem("")
        self.lineEdit = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit.setGeometry(QtCore.QRect(10, 20, 113, 21))
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit_2.setGeometry(QtCore.QRect(10, 60, 113, 21))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit_3.setGeometry(QtCore.QRect(10, 100, 113, 21))
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.lineEdit_4 = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit_4.setGeometry(QtCore.QRect(10, 140, 113, 21))
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.lineEdit_5 = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit_5.setGeometry(QtCore.QRect(10, 190, 113, 21))
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.pushButton = QtWidgets.QPushButton(self.groupBox)
        self.pushButton.setGeometry(QtCore.QRect(580, 270, 93, 28))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.btn_clicked)
        self.textEdit = QtWidgets.QTextEdit(self.groupBox)
        self.textEdit.setGeometry(QtCore.QRect(350, 30, 351, 191))
        self.textEdit.setObjectName("textEdit")
        self.label = QtWidgets.QLabel(self.groupBox)
        self.label.setGeometry(QtCore.QRect(350, 10, 56, 12))
        self.label.setObjectName("label")
        
      
        self.verticalLayout.addWidget(self.groupBox)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.groupBox.setTitle(_translate("MainWindow", "아군 챔피언"))
        self.comboBox.setItemText(0, _translate("MainWindow", "라인 선택"))
        self.comboBox.setItemText(1, _translate("MainWindow", "탑"))
        self.comboBox.setItemText(2, _translate("MainWindow", "정글"))
        self.comboBox.setItemText(3, _translate("MainWindow", "미드"))
        self.comboBox.setItemText(4, _translate("MainWindow", "원딜"))
        self.comboBox.setItemText(5, _translate("MainWindow", "서폿"))
        self.comboBox_2.setItemText(0, _translate("MainWindow", "라인 선택"))
        self.comboBox_2.setItemText(1, _translate("MainWindow", "탑"))
        self.comboBox_2.setItemText(2, _translate("MainWindow", "정글"))
        self.comboBox_2.setItemText(3, _translate("MainWindow", "미드"))
        self.comboBox_2.setItemText(4, _translate("MainWindow", "원딜"))
        self.comboBox_2.setItemText(5, _translate("MainWindow", "서폿"))
        self.comboBox_3.setItemText(0, _translate("MainWindow", "라인 선택"))
        self.comboBox_3.setItemText(1, _translate("MainWindow", "탑"))
        self.comboBox_3.setItemText(2, _translate("MainWindow", "정글"))
        self.comboBox_3.setItemText(3, _translate("MainWindow", "미드"))
        self.comboBox_3.setItemText(4, _translate("MainWindow", "원딜"))
        self.comboBox_3.setItemText(5, _translate("MainWindow", "서폿"))
        self.comboBox_4.setItemText(0, _translate("MainWindow", "라인 선택"))
        self.comboBox_4.setItemText(1, _translate("MainWindow", "탑"))
        self.comboBox_4.setItemText(2, _translate("MainWindow", "정글"))
        self.comboBox_4.setItemText(3, _translate("MainWindow", "미드"))
        self.comboBox_4.setItemText(4, _translate("MainWindow", "원딜"))
        self.comboBox_4.setItemText(5, _translate("MainWindow", "서폿"))
        self.comboBox_5.setItemText(0, _translate("MainWindow", "라인 선택"))
        self.comboBox_5.setItemText(1, _translate("MainWindow", "탑"))
        self.comboBox_5.setItemText(2, _translate("MainWindow", "정글"))
        self.comboBox_5.setItemText(3, _translate("MainWindow", "미드"))
        self.comboBox_5.setItemText(4, _translate("MainWindow", "원딜"))
        self.comboBox_5.setItemText(5, _translate("MainWindow", "서폿"))
        self.lineEdit.setText(_translate("MainWindow", "챔피언 입력창"))
        self.lineEdit_2.setText(_translate("MainWindow", "챔피언 입력창"))
        self.lineEdit_3.setText(_translate("MainWindow", "챔피언 입력창"))
        self.lineEdit_4.setText(_translate("MainWindow", "챔피언 입력창"))
        self.lineEdit_5.setText(_translate("MainWindow", "내 챔피언"))
        self.pushButton.setText(_translate("MainWindow", "추천받기"))
        self.label.setText(_translate("MainWindow", "챔피언"))


    def btn_clicked(self):
        #입력받은 데이터 이름과 번호 맞추기
        with open('./champion.json', 'r') as f: #mat 불러오기
            champ_list = json.load(f)
        allplayer=np.zeros(159)
        player1=self.lineEdit.text()
        player2=self.lineEdit_2.text()  
        player3=self.lineEdit_3.text()  
        player4=self.lineEdit_4.text()      
    
        # 4번째 입력 챔피언으로 데이터비교
        for i in range(len(champ_list)):
            if champ_list[i]["name"]==player4:
                allplayer[i]=1
            
            #if champ_list[i]["name"]==player2:
            #    allplayer[i]=1    
            #if champ_list[i]["name"]==player3:
            #    allplayer[i]=1   
            #if champ_list[i]["name"]==player4:
            #    allplayer[i]=1
        
        #모델형식에 맞게 데이터변환
        allplayertest=np.zeros(159)
        allplayertest=allplayer[:]   
        allplayertestdata=[]
        model = load_model('bottom_duo_model.h5')
        
        for i in range(len(champ_list)):
            line=[]
            if allplayer[i]==1:
                #print("hi")
                line=copy.deepcopy(allplayertest)
                allplayertestdata.append(line)
                
            else:
                k=allplayer[i]+1
                allplayertest[i]=k
                line=copy.deepcopy(allplayertest)
                #print(line)
                #print(allplayertestdata)
                allplayertestdata.append(line)
                #print(allplayertestdata[i])
                allplayertest[i]=0
            
            
        
        allplayertestdata=np.array(allplayertestdata)
        
        X=allplayertestdata[:,:]
       
        yhat=model.predict(X)
        
        #값이 너무 작아 키워서 정수처리
        yhat=1000000000*yhat
        yhat=yhat.astype(int)
        print(yhat)
        champion1=[]
        result=[]
        # 만점이고 입력값이 아니면 출력
        for j in range(len(champ_list)):
            if yhat[j]==1000000000 and (champ_list[j]["name"]!=player1 and champ_list[j]["name"]!=player2 and champ_list[j]["name"]!=player3 and champ_list[j]["name"]!=player4):
                champion1=champ_list[j]["name"]
                print(champion1)
                result.append(champion1)
        #결과를 리스트로 보여줌        
        self.textEdit.setText(str(result))        
        
        #champion_1=champ_list[sort_index[0]]["name"]
        #champion_2=champ_list[sort_index[1]]["name"]
        #champion_3=champ_list[sort_index[2]]["name"] 
        #print(champion_1,champion_2,champion_3) 

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())